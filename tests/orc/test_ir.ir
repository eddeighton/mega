; ModuleID = './test_ir.c'
source_filename = "./test_ir.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.reference_ = type { i32, i32, ptr }

@pFunctionPtr = internal global ptr null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @test(ptr noundef %pReference) #0 {
entry:
  %retval = alloca i32, align 4
  %pReference.addr = alloca ptr, align 8
  store ptr %pReference, ptr %pReference.addr, align 8
  %0 = load ptr, ptr @pFunctionPtr, align 8
  %tobool = icmp ne ptr %0, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr %pReference.addr, align 8
  %instance = getelementptr inbounds %struct.reference_, ptr %1, i32 0, i32 0
  %2 = load i32, ptr %instance, align 8
  call void @getFunction(i32 noundef %2, ptr noundef @pFunctionPtr)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load ptr, ptr %pReference.addr, align 8
  %type = getelementptr inbounds %struct.reference_, ptr %3, i32 0, i32 1
  %4 = load i32, ptr %type, align 4
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.end
  %5 = load ptr, ptr @pFunctionPtr, align 8
  %call = call i32 (...) %5()
  store i32 %call, ptr %retval, align 4
  br label %return

sw.default:                                       ; preds = %if.end
  store i32 0, ptr %retval, align 4
  br label %return

return:                                           ; preds = %sw.default, %sw.bb
  %6 = load i32, ptr %retval, align 4
  ret i32 %6
}

declare void @getFunction(i32 noundef, ptr noundef) #1

attributes #0 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 15.0.0 (https://github.com/eddeighton/llvm-project.git 7dd793ee820103e545b24c43a930dd360946dd64)"}
