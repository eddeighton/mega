//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.


// ed was here
#include "mega/values/native_types.hpp"
#include "mega/values/runtime/reference.hpp"
#include "service/protocol/common/mpo_context_interface.hpp" 
#include "jit/object_functions.hxx"
#include "jit/relation_functions.hxx"
#include "jit/jit_exception.hpp"

static const char* g_pszModuleName = "{{module_name}}";

namespace mega::mangle
{
{% for copy in copiers %}
    void copy_{{copy}}(const void*,void*);
{% endfor %}
{% for event in events %}
    void save_record_{{event}}(const reference&,const void*);
{% endfor %}
    void log( const char* );
}

{{ return_type }} {{ name }}( mega::reference& context {% if has_parameter_context %}, mega::reference& target{% endif %}{% if has_parameter_data %}, const void* pData{% endif%} )
{
{% for variable in variables %}
{{ variable }}
{% endfor %}

{% for assignment in assignments %}
{{ assignment }}
{% endfor %}

    throw mega::runtime::JITException{ "Invocation failed" };
    return {};
}
