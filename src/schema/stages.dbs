//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

include( environment/include.hpp )

///////////////////////////////////////////
///////////////////////////////////////////
// Stages
stage ComponentListing
{
    source .manifest;
    file Components;
}

stage ComponentListingView
{
    source .manifest;
    dependency ComponentListing;
    global accessor array< ref< Components::Component > >;
}

stage ParserStage
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency ComponentListing;

    file AST;
    file Body;

    global accessor array< ref< Components::Component > >;
    persource accessor array< ref< Parser::MegaInclude > >;
}

stage InterfaceStage
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency ParserStage;

    file Tree;

    global accessor array< ref< Components::Component > >;
    persource accessor ref< Parser::ObjectSourceRoot >;

    persource accessor array< ref< Parser::SystemInclude > >;
    persource accessor array< ref< Parser::CPPInclude > >;

    persource accessor array< ref< Interface::Namespace > >;
    persource accessor array< ref< Interface::Abstract > >;
    persource accessor array< ref< Interface::State > >;
    persource accessor array< ref< Interface::Action > >;
    persource accessor array< ref< Interface::Component > >;
    persource accessor array< ref< Interface::Event > >;
    persource accessor array< ref< Interface::Function > >;
    persource accessor array< ref< Interface::Object > >;
    persource accessor array< ref< Interface::LinkTrait > >;
    persource accessor array< ref< Interface::Interupt > >;
}

stage DependencyAnalysis
{
    source .manifest;
    dependency InterfaceStage;

    file DPGraph;

    global accessor array< ref< Components::Component > >;
    global accessor ref< Dependencies::Analysis >;
    persource accessor ref< Interface::Root >;
}

stage DependencyAnalysisView
{
    source .manifest;
    dependency DependencyAnalysis;

    global accessor array< ref< Components::Component > >;
    global accessor ref< Dependencies::Analysis >;
    persource accessor ref< Interface::Root >;
    persource accessor array< ref< Parser::SystemInclude > >;
    persource accessor array< ref< Parser::CPPInclude > >;
}

stage SymbolAnalysis
{
    source .manifest;
    dependency DependencyAnalysis;

    file SymbolTable;

    global accessor ref< Symbols::SymbolTable >;
    persource accessor ref< Interface::DimensionTrait >;
    persource accessor ref< Interface::LinkTrait >;
    persource accessor ref< Interface::IContext >;
}

stage SymbolAnalysisView
{
    source .manifest;
    dependency SymbolAnalysis;

    global accessor ref< Symbols::SymbolTable >;
    persource accessor ref< Interface::DimensionTrait >;
    persource accessor ref< Interface::LinkTrait >;
    persource accessor ref< Interface::IContext >;
}

stage SymbolRollout
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency SymbolAnalysis;

    file PerSourceSymbols;

    global accessor ref< Symbols::SymbolTable >;
    persource accessor ref< Interface::DimensionTrait >;
    persource accessor ref< Interface::LinkTrait >;
    persource accessor ref< Interface::IContext >;
}

stage MetaStage
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency SymbolRollout;

    file MetaAnalysis;

    persource accessor array< ref< Interface::State > >;
    persource accessor array< ref< Interface::Action > >;
    persource accessor array< ref< Interface::Component > >;
    persource accessor array< ref< Interface::Function > >;
    persource accessor array< ref< Interface::Object > >;
    persource accessor array< ref< Interface::Event > >;
    persource accessor array< ref< Interface::Interupt > >;
    persource accessor array< ref< Interface::DimensionTrait > >;
    persource accessor array< ref< Interface::LinkTrait > >;
}

stage InterfaceAnalysisStage
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency MetaStage;

    file Clang;

    global accessor array< ref< Components::Component > >;
    global accessor ref< Dependencies::Analysis >;
    global accessor ref< Symbols::SymbolTable >;
    global accessor array< ref< MegaMangle::Mangle > >;
    
    persource accessor ref< Interface::Root >;
    persource accessor array< ref< Parser::SystemInclude > >;
    persource accessor array< ref< Parser::CPPInclude > >;
}

stage ConcreteStage
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency InterfaceAnalysisStage;

    file Concrete;

    global accessor array< ref< Components::Component > >;
    global accessor ref< Symbols::SymbolTable >;
    persource accessor ref< Interface::Root >;
    persource accessor array< ref< Interface::DimensionTrait > >;
    persource accessor array< ref< Interface::LinkTrait > >;
    persource accessor array< ref< Parser::Dimension > >;
}

stage InheritanceAnalysis
{
    source .manifest;
    dependency ConcreteStage;

    file Derivations;

    persource accessor array< ref< Concrete::Context > >;
    persource accessor array< ref< Concrete::Dimensions::User > >;
    persource accessor array< ref< Concrete::Dimensions::Link > >;
}

stage InheritanceAnalysisView
{
    source .manifest;
    dependency InheritanceAnalysis;

    global accessor ref< Inheritance::Mapping >;
    global accessor ref< Dependencies::Analysis >;
    global accessor array< ref< Components::Component > >;
    persource accessor ref< Interface::Root >;
    global accessor ref< Symbols::SymbolTable >;
}

stage InheritanceAnalysisRollout
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency InheritanceAnalysis;

    file PerSourceDerivations;

    persource accessor array< ref< Interface::IContext > >;
    persource accessor array< ref< Interface::DimensionTrait > >;
    persource accessor array< ref< Interface::LinkTrait > >;
    global accessor ref< Inheritance::Mapping >;
}

stage HyperGraphAnalysis
{
    source .manifest;
    dependency InheritanceAnalysisRollout;

    file Model;

    persource accessor array< ref< Interface::LinkTrait > >;
    persource accessor array< ref< Concrete::Graph::Vertex > >;
    persource accessor ref< Concrete::Root >;
    global accessor ref< Symbols::SymbolTable >;
}

stage HyperGraphAnalysisView
{
    source .manifest;
    dependency HyperGraphAnalysis;

    persource accessor ref< Interface::Root >;
    persource accessor ref< Concrete::Root >;
    global accessor ref< HyperGraph::Graph >;
}

stage HyperGraphAnalysisRollout
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency HyperGraphAnalysis;

    file PerSourceModel;

    persource accessor array< ref< Interface::LinkTrait > >;
    persource accessor array< ref< Concrete::Object > >;
    persource accessor ref< Concrete::Root >;
    persource accessor ref< Concrete::Graph::Vertex >;
    persource accessor ref< Concrete::Graph::Edge >;
    global accessor ref< HyperGraph::Graph >;
}

stage AliasAnalysis
{
    source .manifest;
    dependency HyperGraphAnalysisRollout;

    file Model;

    persource accessor array< ref< Interface::LinkTrait > >;
    persource accessor array< ref< Concrete::Graph::Vertex > >;
    persource accessor ref< Concrete::Root >;
    global accessor ref< Symbols::SymbolTable >;
}

stage AliasAnalysisView
{
    source .manifest;
    dependency AliasAnalysis;

    persource accessor ref< Interface::Root >;
    persource accessor ref< Concrete::Root >;
    global accessor ref< HyperGraph::Graph >;
}

stage AliasAnalysisRollout
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency AliasAnalysis;

    file PerSourceModel;

    persource accessor array< ref< Interface::LinkTrait > >;
    persource accessor array< ref< Concrete::Object > >;
    persource accessor ref< Concrete::Root >;
    persource accessor ref< Concrete::Graph::Vertex >;
    global accessor ref< HyperGraph::Graph >;
}

stage ConcreteTypeAnalysis
{
    source .manifest;
    dependency AliasAnalysisRollout;

    file ConcreteTable;

    persource accessor ref< Concrete::Graph::Vertex >;
    global accessor ref< Symbols::SymbolTable >;

}

stage ConcreteTypeAnalysisView
{
    source .manifest;
    dependency ConcreteTypeAnalysis;

    persource accessor ref< Concrete::Graph::Vertex >;
    global accessor ref< Symbols::SymbolTable >;
}

stage ConcreteTypeRollout
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency ConcreteTypeAnalysis;

    file PerSourceConcreteTable;

    persource accessor ref< Concrete::Graph::Vertex >;
    global accessor ref< Symbols::SymbolTable >;
}


stage MemoryStage
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency ConcreteTypeRollout;

    file MemoryLayout;

    persource accessor array< ref< Interface::IContext > >;
    persource accessor ref< Concrete::Root >;
    persource accessor ref< Concrete::Object >;
}

stage GlobalMemoryStage
{
    source .manifest;
    dependency MemoryStage;

    file GlobalMemoryLayout;

    persource accessor array< ref< Concrete::Object > >;
}

stage GlobalMemoryStageRollout
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency GlobalMemoryStage;

    file GlobalMemoryRollout;

    global accessor array< ref< MemoryLayout::MemoryMap > >;
    persource accessor array< ref< Concrete::Object > >;
}

stage AutomataStage
{
    source .manifest;
    source .mega;
    source .cpp;
    dependency GlobalMemoryStageRollout;

    file AutomataAnalysis;

    persource accessor array< ref< Concrete::Object > >;
}

stage OperationsStage
{
    source .manifest;
    source .mega;
    source .cpp;
    
    dependency AutomataStage;

    file Operations;

    global accessor array< ref< Components::Component > >;
    global accessor ref< Symbols::SymbolTable >;
    global accessor ref< Inheritance::Mapping >;

    persource accessor ref< Interface::Root >;
    persource accessor ref< Interface::TransitionTypeTrait >;
    persource accessor ref< Interface::EventTypeTrait >;
}

stage OperationsLocs
{
    source .manifest;
    source .mega;
    source .cpp;

    dependency OperationsStage;

    file Locations;

    persource accessor array< ref< Interface::InvocationContext > >;
    persource accessor ref< Operations::Invocations >;
}

stage ValueSpaceStage
{
    source .manifest;
    source .mega;
    source .cpp;

    dependency OperationsLocs;

    file ValueSpace;

    persource accessor array< ref< Interface::InvocationContext > >;
    persource accessor ref< Operations::Invocations >;
}

stage UnityStage
{
    source .manifest;
    dependency ValueSpaceStage;

    file UnityAnalysis;

    global accessor ref< Symbols::SymbolTable >;

    persource accessor ref< Concrete::Context >;
    persource accessor array< ref< Concrete::Dimensions::User > >;
    global accessor array< ref< HyperGraph::Relation > >;
    global accessor ref< HyperGraph::Graph >;
    global accessor array< ref< MegaMangle::Mangle > >;
}

stage UnityStageView
{
    source .manifest;
    dependency UnityStage;

    global accessor array< ref< MemoryLayout::MemoryMap > >;
    global accessor ref< Symbols::SymbolTable >;
    global accessor array< ref< UnityAnalysis::Binding > >;
    global accessor array< ref< HyperGraph::Relation > >;
    global accessor array< ref< MegaMangle::Mangle > >;
}

stage FinalStage
{
    source .mega;
    dependency UnityStage;

    global accessor array< ref< Components::Component > >;
    global accessor ref< Symbols::SymbolTable >;
    global accessor ref< Dependencies::Analysis >;
    global accessor array< ref< UnityAnalysis::Binding > >;
    global accessor array< ref< MemoryLayout::MemoryMap > >;
    global accessor ref< HyperGraph::Graph >;
    global accessor array< ref< HyperGraph::Relation > >;
    
    persource accessor ref< Interface::Root >;
    persource accessor ref< Interface::IContext >;
    persource accessor array< ref< Interface::State > >;
    persource accessor array< ref< Interface::Action > >;
    persource accessor array< ref< Interface::Object > >;
    persource accessor array< ref< Interface::Component > >;
    persource accessor array< ref< Interface::InvocationContext > >;
    persource accessor ref< Concrete::Root >;
    persource accessor ref< Operations::Invocations >;
    persource accessor array< ref< Concrete::Object > >;
    persource accessor array< ref< Parser::SystemInclude > >;
    persource accessor array< ref< Parser::CPPInclude > >;
    persource accessor array< ref< Concrete::Dimensions::User > >;
    persource accessor array< ref< Concrete::Dimensions::Link > >;
    persource accessor array< ref< Concrete::Graph::Vertex > >;
    persource accessor array< ref< Concrete::Graph::Edge > >;
    
}
