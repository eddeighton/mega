
#include "mega/native_types.hpp"
#include "mega/reference.hpp"
#include "runtime/runtime_functions.hpp"


void shared_ctor_{{ objectTypeID }}( void* pBuffer )
{
}

void shared_dtor_{{ objectTypeID }}( void* pBuffer )
{
}

void heap_ctor_{{ objectTypeID }}( void* pBuffer )
{
}

void heap_dtor_{{ objectTypeID }}( void* pBuffer )
{
}

static mega::runtime::Allocator* __g_allocator = nullptr;

void set_allocator_{{ objectTypeID }}( mega::runtime::Allocator* pAllocator )
{
    __g_allocator = pAllocator;
}

void* get_shared_{{ objectTypeID }}( mega::MachineAddress address )
{
    return __g_allocator->get_shared( address );
}

void* get_heap_{{ objectTypeID }}( mega::MachineAddress address )
{
    return __g_allocator->get_heap( address );
}
