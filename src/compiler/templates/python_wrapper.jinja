//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

#include "{{ include }}"

#include <pybind11/pybind11.h>

{% for operation in operations %}

extern "C"
{
PyObject* _pw{{ operation.typeID }}( mega::runtime::CallResult& callResult, const pybind11::args& pyArgs )
{
    using FPtr = {{ operation.return_type }} (*)( mega::reference*{% for param in operation.params %}, {{param.type}} {{param.name}}{% endfor %} );
    FPtr pOp = reinterpret_cast< FPtr >( const_cast< void* >( callResult.pFunction ) );
    static {{ operation.return_type }} result;
    result = pOp( &callResult.context {% for param in operation.params %}, pybind11::cast< {{param.type}} >( pyArgs[ {{ loop.index }} ] ){% endfor %} );
    auto pyObject = pybind11::cast( result );
    pyObject.inc_ref();
    return pyObject.ptr();
}
}
BOOST_DLL_ALIAS_SECTIONED( _pw{{ operation.typeID }}, _pa{{ operation.typeID }}, mega )

{% endfor %}
