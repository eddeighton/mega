#ifndef INTERFACE_GUARD_{{ guard }}
#define INTERFACE_GUARD_{{ guard }}

{% for forward_decl in forward_decls %}
struct [[clang::eg_type( {{ forward_decl.symbol }} )]]{{ forward_decl.name }}
{
    enum : mega::TypeID
    {
        ID = {{ forward_decl.symbol }}
    };
};
{% endfor %}

template< typename Context, typename TypePath, typename Operation, typename... Args >
static void invoke_impl_void( Context context, Args... args );

template< typename ResultType, typename Context, typename TypePath, typename Operation, typename... Args >
static ResultType invoke_impl( Context context, Args... args );

{{ interface }}

{% for struct in structs %}
struct [[clang::eg_type( {{ struct.typeid }} )]] {% for type in struct.types %}{{ type }}{% if not loop.is_last%}::{% endif %}{% endfor %}
{
    enum : mega::TypeID
    {
        ID = {{ struct.typeid }}
    };
{% for trait in struct.traits %}
    {{ trait }};
{% endfor %}
};
{% endfor %}

#endif //INTERFACE_GUARD_{{ guard }}
