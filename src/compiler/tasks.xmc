//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

TASK_SRC(GenerateComponents,config.componentInfos,const std::vector< mega::io::ComponentInfo >&)

TASK_SRC(ParseAST,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_PROJECT(AST)

TASK_PROJECT(PythonStages)
TASK_SRC(CPPStages,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)

TASK_PROJECT(DependencyAnalysis)

TASK_PROJECT(SymbolAnalysis)
TASK_SRC(SymbolRollout,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_PROJECT(ConcreteTree)
TASK_PROJECT(ConcreteTypeAnalysis)





TASK_SRC(Include,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(IncludePCH,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(InterfaceGeneration,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(InterfaceAnalysis,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_PROJECT(HyperGraph)
TASK_SRC(HyperGraphRollout,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_SRC(Meta,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_SRC(Operations,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(Automata,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(OperationsPCH,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(OperationsLocs,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(ValueSpace,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_SRC(Implementation,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(ImplementationObj,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_SRC(Initialiser,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(InitialiserObject,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_SRC(PythonWrapper,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)
TASK_SRC(PythonObject,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_PROJECT(UnityReflection)
TASK_PROJECT(UnityAnalysis)
TASK_PROJECT(Unity)
TASK_PROJECT(UnityDatabase)

// Component name based tasks
TASK_SRC(CPPInclude,std::get< std::string >( task.sourceFilePath ),const std::string&)
TASK_SRC(CPPIncludePCH,std::get< std::string >( task.sourceFilePath ),const std::string&)
TASK_SRC(CPPInterfaceGeneration,std::get< std::string >( task.sourceFilePath ),const std::string&)
TASK_SRC(CPPInterfaceAnalysis,std::get< std::string >( task.sourceFilePath ),const std::string&)

TASK_SRC(CPPOperationsPCH,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)
TASK_SRC(CPPImplementation,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)
TASK_SRC(CPPObj,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)

TASK_SRC(InterfaceComponent,std::get< std::string >( task.sourceFilePath ),const std::string&)
TASK_SRC(LibraryComponent,std::get< std::string >( task.sourceFilePath ),const std::string&)
TASK_PROJECT(Complete)