//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

TASK_SRC(GenerateComponents,config.componentInfos,const std::vector< mega::io::ComponentInfo >&)

TASK_SRC(ParseAST,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_PROJECT(AST)

TASK_PROJECT(Include)
TASK_PROJECT(IncludePCH)

TASK_PROJECT(SymbolAnalysis)
TASK_SRC(SymbolRollout,std::get< mega::io::megaFilePath >( task.sourceFilePath ),const mega::io::megaFilePath&)

TASK_PROJECT(ConcreteTree)
TASK_PROJECT(ConcreteTypeAnalysis)

TASK_PROJECT(HyperGraph)
TASK_PROJECT(Automata)

TASK_PROJECT(Clang_Traits_Gen)
TASK_PROJECT(Clang_Traits_Analysis)

TASK_SRC(CPP_Source,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)
TASK_SRC(CPP_Compile,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)
TASK_SRC(CPP_Impl,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)
TASK_SRC(CPP_Obj,std::get< mega::io::cppFilePath >( task.sourceFilePath ),const mega::io::cppFilePath&)

TASK_PROJECT(Decisions)

TASK_PROJECT(UnityReflection)
TASK_PROJECT(UnityAnalysis)
TASK_PROJECT(Unity)
TASK_PROJECT(UnityDatabase)
