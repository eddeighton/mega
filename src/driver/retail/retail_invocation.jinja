

template<>
struct _result_type< {{ result_type_id }} >
{
    using Type = {{ return_type }};
};

{% if has_namespaces %} 
{% for namespace in namespaces %}{% if loop.is_first%}namespace {%else%}::{% endif %}{{namespace}}{% endfor %}
{ 
{% endif %}
template < std::size_t InvocationUUID, typename... Args >
typename _result_type< InvocationUUID >::Type {% for type in types %}{{type}}::{% endfor %}{{ name }}( Args... args ) const
{
    {% for variable in variables %}
    {{ variable }}
    {% endfor %}

    {% for assignment in assignments %}
    {{ assignment }}
    {% endfor %}

}
{% if has_namespaces %} 
} 
{% endif %}
