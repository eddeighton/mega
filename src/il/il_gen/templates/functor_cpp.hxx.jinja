
//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

#ifndef GUARD_2023_December_05_functor_cpp
#define GUARD_2023_December_05_functor_cpp

{% for include in includes %}
#include "{{ include }}"
{% endfor %}

#include "runtime/functor_id.hxx"

{% for mat in materialisers %}
namespace mega::runtime::{{ mat.name }}
{
{% for function in mat.functions %}
    class {{ function.name }}
    {
        using FunctionPtr = {{ function.return_type_erased }} ( * ) ({% for arg in function.parameters %}{{ arg.type_erased }}{% if not loop.is_last%}, {% endif %}{% endfor %});
    public:
        {{ function.name }}( {% for arg in mat.parameters %}{{ arg.type_cpp }} {{ arg.name }}{% if not loop.is_last%}, {% endif %}{% endfor %} );
        {{ function.return_type_cpp }} operator() ({% for arg in function.parameters %}{{ arg.type_cpp }} {{ arg.name }}{% if not loop.is_last%}, {% endif %}{% endfor %}) const;
    private:
        const {{ mat.name }}_id m_id;
        mutable bool m_bResolving;
        mutable FunctionPtr m_function;
    };
{% endfor %}
}
{% endfor %}

#endif //GUARD_2023_December_05_functor_cpp
