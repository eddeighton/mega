
//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

#ifndef GUARD_2023_November_24_functions
#define GUARD_2023_November_24_functions

#include "il/elements/types.hpp"

namespace mega::il
{

{% for inline in inlines %}
struct {{ inline.name }} : InlineFunction
{
    {{ inline.name }}()
    {
        using namespace std::string_literals;
        name = "{{ inline.name }}"s;
{% for parameter in inline.parameters %}
        parameterTypes.emplace_back( {{ parameter.type_var }}{ {{ parameter.type_data }} } );
{% endfor %}
        returnType = {{ inline.return_type_var }}{ {{ inline.return_type_data }} };
    }
};
{% endfor %}

{% for extern in externs %}
struct {{ extern.name }} : ExternFunction
{
    {{ extern.name }}()
    {
        using namespace std::string_literals;
        name = "{{ extern.name }}"s;
{% for parameter in extern.parameters %}
        parameterTypes.emplace_back( {{ parameter.type_var }}{ {{ parameter.type_data }} } );
{% endfor %}
        returnType = {{ extern.return_type_var }}{ {{ extern.return_type_data }} };
    }
};
{% endfor %}

} // namespace mega::il

#endif // GUARD_2023_November_24_functions
