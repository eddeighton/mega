
//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

#ifndef GUARD_2023_December_05_materialisers.hxx
#define GUARD_2023_December_05_materialisers.hxx

#include "il/elements/types.hpp"

namespace mega::il
{

{% for mat in materialisers %}
struct {{ mat.name }} : Materialiser
{
    enum FunctionTypes
    {
{% for function in mat.functions %}
        {{ function.name }}{% if not loop.is_last%},{% endif %}

{% endfor %}
    };
    {{ mat.name }}()
    {
        using namespace std::string_literals;
{% for parameter in mat.parameters %}
        parameterTypes.emplace_back( {{ parameter.variable_type }}{ {{ parameter.data_type }} } );
{% endfor %}
{% for function in mat.functions %}
        functionTemplates.insert( { {{ function.name }}, 
            FunctionTemplate
            { 
                JIT
                { 
                    Function
                    { 
                        "{{ function.name }}"s, 
                        { 
{% for parameter in function.parameters %}
                            {{ parameter.variable_type }}{ {{ parameter.data_type }} }{% if not loop.is_last%},{% endif %}

{% endfor %}
                        }, 
                        {{ function.return_variable_type }}{ {{ function.return_data_type }} } 
                    } 
                } 
            } } );
{% endfor %}
    }
};
{% endfor %}

}

#endif //GUARD_2023_December_05_materialisers.hxx
