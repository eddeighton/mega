
//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

#include "database/model/environment.hxx"

#include "database/common/component_info.hpp"
#include "database/types/sources.hpp"

#include "database/model/manifest.hxx"

#include "common/file.hpp"

#include "boost/dll/alias.hpp"
#include <boost/filesystem/directory.hpp>

extern "C"
{
const mega::U64 _db_version_ = {{ schema_version }};
}
BOOST_DLL_ALIAS_SECTIONED( _db_version_, MEGA_DATABASE_VERSION, mega )

namespace mega
{
namespace io
{
    mega::U64 Environment::getVersion()
    {
        return _db_version_;
    }
{% for stage in stages %}
{% for file in stage.files %}
{% for source in stage.sources %}
    CompilationFilePath Environment::{{ stage.name }}_{{ file.name }}( const {{ source }}FilePath& source) const
    {
        std::ostringstream os;                                                                
        os << source.path().filename().string() << ".{{ stage.name }}.{{ file.name }}" << CompilationFilePath::extension().string();
        auto dirPath = source.path();
        dirPath.remove_filename();
        return CompilationFilePath( dirPath / os.str() );      
    }
{% endfor %}
{% endfor %}
{% endfor %}

} // namespace io
} // namespace mega
