

namespace Interface
{
    // context traits
    object DimensionTrait : Parser::Dimension -> InterfaceStage::Tree
    {
        value< std::int32_t > symbol -> SymbolRollout::PerSourceSymbols;
        late< value< std::int32_t > > type_id -> SymbolRollout::PerSourceSymbols;

        //value< std::string > canonical -> InterfaceAnalysisStage::Clang;
    }

    object InheritanceTrait : Parser::Inheritance -> InterfaceStage::Tree
    {
        array< ref< IContext > > contexts -> InterfaceAnalysisStage::Clang;
    }

    object LinkTrait : Parser::Link -> InterfaceStage::Tree
    {

    }

    object ReturnTypeTrait : Parser::ReturnType -> InterfaceStage::Tree
    {

    }

    object ArgumentListTrait : Parser::ArgumentList -> InterfaceStage::Tree
    {

    }

    object SizeTrait : Parser::Size -> InterfaceStage::Tree
    {

    }

    // basic context types
    object ContextGroup -> InterfaceStage::Tree
    {
        array< ref< IContext > > children;
    }

    object Root : ContextGroup -> InterfaceStage::Tree
    {
        ref< Parser::ObjectSourceRoot > root;
    }

    object IContext : ContextGroup -> InterfaceStage::Tree
    {
        value< std::string > identifier;
        ref< ContextGroup > parent;
        value< std::int32_t > symbol -> SymbolRollout::PerSourceSymbols;
        late< value< std::int32_t > > type_id -> SymbolRollout::PerSourceSymbols;
        opt< ref< Concrete::Context > > concrete -> ConcreteStage::Concrete;
    }

    // main context types
    object Namespace : IContext -> InterfaceStage::Tree
    {
        value< bool > is_global;
        array< ref< Parser::ContextDef > > namespace_defs;
        late< array< ref< DimensionTrait > > > dimension_traits;
    }
    object Abstract : IContext -> InterfaceStage::Tree
    {
        array< ref< Parser::AbstractDef > > abstract_defs;
        late< array< ref< DimensionTrait > > > dimension_traits;
        late< opt< ref< InheritanceTrait > > > inheritance_trait;
    }
    object Action : IContext -> InterfaceStage::Tree
    {
        array< ref< Parser::ActionDef > > action_defs;
        late< array< ref< DimensionTrait > > > dimension_traits;
        late< opt< ref< InheritanceTrait > > > inheritance_trait;
        late< opt< ref< SizeTrait > > > size_trait;
    }
    object Event : IContext -> InterfaceStage::Tree
    {
        array< ref< Parser::EventDef > > event_defs;
        late< array< ref< DimensionTrait > > > dimension_traits;
        late< opt< ref< InheritanceTrait > > > inheritance_trait;
        late< opt< ref< SizeTrait > > > size_trait;
    }
    object Function : IContext -> InterfaceStage::Tree
    {
        array< ref< Parser::FunctionDef > > function_defs;
        late< ref< ReturnTypeTrait > > return_type_trait;
        late< ref< ArgumentListTrait > > arguments_trait;
    }
    object Object : IContext -> InterfaceStage::Tree
    {
        array< ref< Parser::ObjectDef > > object_defs;
        late< array< ref< DimensionTrait > > > dimension_traits;
        late< opt< ref< InheritanceTrait > > > inheritance_trait;
    }
    object Link : IContext -> InterfaceStage::Tree
    {
        array< ref< Parser::LinkDef > > link_defs;
        late< ref< LinkTrait > > link_trait;
        late< ref< InheritanceTrait > > link_target;
    }
    object Table : IContext -> InterfaceStage::Tree
    {
        array< ref< Parser::TableDef > > table_defs;
    }

}
