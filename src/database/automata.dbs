//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.


namespace Automata
{

    object Node -> AutomataStage::AutomataAnalysis
    {
        array< ref< Node > > nodes;
    }

    object Literal : Node -> AutomataStage::AutomataAnalysis
    {
        value< std::string > value;
    }

    object Block : Node -> AutomataStage::AutomataAnalysis
    {
        value< mega::U64 > id;

        array< ref< Interface::Action > > actions -> ValueSpaceStage::ValueSpace;
    }

    object Sequence : Block -> AutomataStage::AutomataAnalysis
    {
    }

    object Repeat : Block -> AutomataStage::AutomataAnalysis
    {
    }

    object Alternative : Block -> AutomataStage::AutomataAnalysis
    {
    }

    object InteruptHandler : Block -> AutomataStage::AutomataAnalysis
    {
    }

    object EventHandler : Block -> AutomataStage::AutomataAnalysis
    {
    }

    object Start : Meta::Automata -> AutomataStage::AutomataAnalysis
    {
        ref< Sequence > sequence;
    }

}
