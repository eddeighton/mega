
namespace Operations
{
    
    object InterfaceVariant -> OperationsStage::Operations
    {
        opt< ref< Interface::IContext > > context;
        opt< ref< Interface::DimensionTrait > > dimension;
    }

    object ConcreteVariant -> OperationsStage::Operations
    {
        opt< ref< Concrete::Context > > context;
        opt< ref< Concrete::Dimensions::User > > dimension;
    }

    object Element -> OperationsStage::Operations
    {
        ref< InterfaceVariant > interface;
        ref< ConcreteVariant > concrete;
    }

    object ElementVector -> OperationsStage::Operations
    {
        array< ref< Element > > elements;
    }

    object Context -> OperationsStage::Operations
    {
        array< ref< ElementVector > > vectors;
    }

    object TypePath -> OperationsStage::Operations
    {
        array< ref< ElementVector > > vectors;
    }

    object NameRoot -> OperationsStage::Operations
    {
        array< ref< Name > > children;
    }

    object Name : NameRoot -> OperationsStage::Operations
    {
        ref< Element > element;
        value< bool > is_member;
        value< bool > is_reference;
    }

    object NameResolution -> OperationsStage::Operations
    {
        ref< NameRoot > root_name;
    }

    object Invocation -> OperationsStage::Operations
    {
        ref< Context > context;
        ref< TypePath > type_path;
        value< mega::OperationID > operation;
        value< std::string > name;
        value< std::string > context_str;
        value< std::string > type_path_str;

        late< value< mega::ExplicitOperationID > > explicit_operation;
        late< value< std::string > > return_type_str;
        late< value< std::string > > runtime_return_type_str;

        late< ref< NameResolution > > name_resolution;

        late< ref< Invocations::Variables::Context > > root_variable;
        late< ref< Invocations::Instructions::Root > > root_instruction;

        //late< array< ref< Invocations::Operations::Operation > > > operations;
        late< array< ref< Invocations::Variables::Variable > > > variables;
        //late< array< ref< Invocations::Instructions::Instruction > > > instructions;

        late< array< ref< Interface::IContext > > > return_types_context;
        late< array< ref< Interface::DimensionTrait > > > return_types_dimension;
        late< value< bool > > homogeneous;
        late< value< bool > > is_function_call;
    }

    object Invocations -> OperationsStage::Operations
    {
        map< value< mega::invocation::ID >, ref< Invocation > > invocations;
    }
}
