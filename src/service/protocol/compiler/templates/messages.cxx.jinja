
#include "service/protocol/model/messages.hxx"

#include "service/network/activity.hpp"

namespace mega
{
namespace network
{

bool decode( boost::archive::binary_iarchive& archive, const Header& header, std::shared_ptr< Activity > pActivity )
{
    switch ( header.getMessageID() )
    {
{%for message in messages%}

        case {%for namespace in message.namespaces%}{{namespace}}::{%endfor%}{{ message.name }}::ID:
        {
{%for namespace in message.namespaces%}{{namespace}}::{%endfor%}{{ message.name }} msg;
{%for member in message.members%}
            archive& msg.{{ member.name }}; 
{%endfor%}
{%if message.is_request %}
            pActivity->sendRequest( MessageVariant{ msg } );
{%else%}
            pActivity->sendResponse( MessageVariant{ msg } );
{%endif%}
            return true;
        }
        break;
{%endfor%}
        default:
        {
            return false;
        }
    }
}

}
}