



msg RootListNetworkNodes
{
    request();
    response(std::vector< std::string > nodes);
}

msg RootPipelineStartJobs
{
    request(mega::utilities::ToolChain toolChain,mega::pipeline::Configuration configuration, network::ConversationID rootConversationID);
    response(std::vector< network::ConversationID > jobs);
}

msg RootPipelineStartTask
{
    request(mega::pipeline::TaskDescriptor task);
    response(network::PipelineResult result);
}

msg RootProjectUpdated
{
    request(mega::network::Project project);
    response();
}

msg RootSimList
{
    request();
    response( std::vector< mega::network::ConversationID > simulationIDs );
}

msg RootSimCreate
{
    request();
    response( mega::network::ConversationID newSimulationID );
}

msg RootSimReadLock
{
    request(mega::network::ConversationID simulationID);
    response();
}
msg RootSimWriteLock
{
    request(mega::network::ConversationID simulationID);
    response();
}

msg RootSimReadLockReady
{
    request( mega::TimeStamp timeStamp );
    response();
}
msg RootSimWriteLockReady
{
    request( mega::TimeStamp timeStamp );
    response();
}

msg RootShutdown
{
    request();
    response();
}
