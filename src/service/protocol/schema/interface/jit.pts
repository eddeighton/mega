//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.

//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.

//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

msg GetAllocator
{
    request( mega::TypeID objectTypeID, mega::U64 ppAllocatorPtr );
    response();
}

msg ExecuteJIT
{
    request( mega::runtime::JITFunctor func );
    response();
}

/*
msg GetLoadRecord
{
    request( U64 ppFunction );
    response();
}
msg GetSaveRecord
{
    request( U64 ppFunction );
    response();
}

msg GetLoadObjectRecord
{
    request( U64 pszUnitName, mega::TypeID objectTypeID, U64 ppFunction );
    response();
}

msg GetSaveXMLObject
{
    request( U64 pszUnitName, mega::TypeID objectTypeID, U64 ppFunction );
    response();
}
msg GetLoadXMLObject
{
    request( U64 pszUnitName, mega::TypeID objectTypeID, U64 ppFunction );
    response();
}
msg GetSaveBinObject
{
    request( U64 pszUnitName, mega::TypeID objectTypeID, U64 ppFunction );
    response();
}
msg GetLoadBinObject
{
    request( U64 pszUnitName, mega::TypeID objectTypeID, U64 ppFunction );
    response();
}

msg GetCallGetter
{
    request( U64 pszUnitName, mega::TypeID objectTypeID, U64 ppFunction );
    response();
}

msg GetAllocate
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
msg GetRead
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
msg GetWrite
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
msg GetCall
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
msg GetStart
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
msg GetStop
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
msg GetSave
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
msg GetLoad
{
    request( U64 pszUnitName, mega::InvocationID invocationID, U64 ppFunction );
    response();
}
*/