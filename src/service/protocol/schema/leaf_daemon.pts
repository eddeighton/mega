
msg LeafEnrole
{
    request(mega::network::Node::Type type);
    response();
}

msg TermListNetworkNodes
{
    request();
    response(std::vector< std::string > nodes);
}

msg TermPipelineRun
{
    request(mega::pipeline::Configuration configuration);
    response(mega::network::PipelineResult result);
}

// pipelines
msg ExePipelineReadyForWork
{
    request(network::ConversationID rootConversationID);
    response();
}

msg ExePipelineWorkProgress
{
    request(std::string message);
    response();
}

msg ExeGetBuildHashCode
{
    request( boost::filesystem::path filePath );
    response( task::FileHash hashCode );
}

msg ExeSetBuildHashCode
{
    request( boost::filesystem::path filePath, task::FileHash hashCode );
    response();
}

msg ExeStash
{
    request( boost::filesystem::path filePath, task::DeterminantHash determinant );
    response();
}

msg ExeRestore
{
    request( boost::filesystem::path filePath, task::DeterminantHash determinant );
    response( bool bRestored );
}
