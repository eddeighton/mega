
//  Copyright (c) Deighton Systems Limited. 2022. All Rights Reserved.
//  Author: Edward Deighton
//  License: Please see license.txt in the project root folder.
//
//  Use and copying of this software and preparation of derivative works
//  based upon this software are permitted. Any copy of this software or
//  of any derivative work must include the above copyright notice, this
//  paragraph and the one after it.  Any distribution of this software or
//  derivative works must comply with all applicable laws.
//
//  This software is made available AS IS, and COPYRIGHT OWNERS DISCLAIMS
//  ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE
//  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
//  PURPOSE, AND NOTWITHSTANDING ANY OTHER PROVISION CONTAINED HEREIN, ANY
//  LIABILITY FOR DAMAGES RESULTING FROM THE SOFTWARE OR ITS USE IS
//  EXPRESSLY DISCLAIMED, WHETHER ARISING IN CONTRACT, TORT (INCLUDING
//  NEGLIGENCE) OR STRICT LIABILITY, EVEN IF COPYRIGHT OWNERS ARE ADVISED
//  OF THE POSSIBILITY OF SUCH DAMAGES.

namespace Mega;

// Indicate intention to use this flat buffer schema as file type
file_identifier "MEGA";

// Set the default extension to .map
file_extension "map";

struct Type
{
    mangle:short;
}

// Type name table - map all full type names to type id mangle used within map file
table TypeName
{
    name:string;
    type:Type;
}

// Value Types
struct F2
{
    x:float;
    y:float;
}

struct F3
{
    x:float;
    y:float;
    z:float;
}

struct F4
{
    x:float;
    y:float;
    z:float;
    w:float;
}

struct Quat
{
    x:float;
    y:float;
    z:float;
    w:float;
}

struct F33
{
    m:[F3:3];
}

// Property Types
table FloatProperty
{
    value:float;
}
table LongProperty
{
    value:long;
}
table StringProperty
{
    value:string;
}
table F2Property
{
    value:F2;
}
table F3Property
{
    value:F3;
}
table F4Property
{
    value:F4;
}
table QuatProperty
{
    value:Quat;
}
table F33Property
{
    value:F33;
}

union Variant
{
    FloatProperty,
    LongProperty,
    StringProperty,
    F2Property,
    F3Property,
    F4Property,
    QuatProperty,
    F33Property
}

// Data Tables
table Properties
{
    type:Type;
    variant:Variant;
}

table Area
{
    type:Type;
    properties:[Properties];
    areas:[Area];
}

table Section
{
    type:Type;
    properties:[Properties];
}

table Partition
{
    parent:Area;
    sections:[Section];
}

table Object
{
    type:Type;
    parent:Partition;
    children:[Object];
    properties:[Properties];
}

table PartitionGraph
{
   first:Partition;
   second:Partition;
}
